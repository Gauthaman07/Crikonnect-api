const PDFDocument = require('pdfkit');
const fs = require('fs');
const path = require('path');

const generateFixturePDF = (tournament, fixtures, outputPath) => {
  return new Promise((resolve, reject) => {
    const doc = new PDFDocument({ size: 'A4', margin: 50 });
    const filePath = path.join(
      outputPath,
      `${tournament.tournamentName.replace(/\s+/g, '_')}_fixtures.pdf`
    );
    const writeStream = fs.createWriteStream(filePath);
    doc.pipe(writeStream);

    // Red background
    doc.rect(0, 0, doc.page.width, doc.page.height).fill('#DC2626');

    // Title
    doc.fillColor('#FFFFFF')
      .fontSize(24)
      .font('Helvetica-Bold')
      .text(tournament.tournamentName, { align: 'center' });

    // Subtitle
    doc.moveDown(0.3)
      .fontSize(14)
      .font('Helvetica')
      .fillColor('#FEE2E2')
      .text(`Fixtures · Organized by ${tournament.organizerName} · ${tournament.startDate}`, {
        align: 'center',
      });

    doc.moveDown(1);

    // Fixture cards
    const cardHeight = 60;
    const cardSpacing = 20;
    let currentY = doc.y;

    fixtures.forEach((match, index) => {
      if (currentY + cardHeight + 50 > doc.page.height) {
        doc.addPage();
        doc.rect(0, 0, doc.page.width, doc.page.height).fill('#DC2626');
        currentY = 50;
      }

      const cardX = 50;
      const cardWidth = doc.page.width - 100;

      doc.roundedRect(cardX, currentY, cardWidth, cardHeight, 8)
        .fillOpacity(1)
        .fillAndStroke('#FFFFFF', '#F3F4F6');

      doc.fillColor('#1F2937')
        .fontSize(14)
        .font('Helvetica-Bold')
        .text(match.team1, cardX + 20, currentY + 20, {
          width: cardWidth / 2 - 40,
          align: 'left',
        });

      doc.fillColor('#6B7280')
        .fontSize(12)
        .font('Helvetica-Bold')
        .text('vs', cardX + cardWidth / 2 - 10, currentY + 22, {
          width: 20,
          align: 'center',
        });

      doc.fillColor('#1F2937')
        .fontSize(14)
        .font('Helvetica-Bold')
        .text(match.team2, cardX + cardWidth / 2 + 20, currentY + 20, {
          width: cardWidth / 2 - 40,
          align: 'right',
        });

      currentY += cardHeight + cardSpacing;
    });

    doc.moveDown(2);
    doc.fontSize(10)
      .fillColor('#FECACA')
      .text('Generated by Crikonnect', {
        align: 'center',
      });

    doc.end();

    writeStream.on('finish', () => {
      resolve(filePath);
    });

    writeStream.on('error', reject);
  });
};

module.exports = generateFixturePDF;


// Run the function if executed directly
// if (require.main === module) {
//   const tournament = {
//     tournamentName: "Coastal League 2025",
//     organizerName: "Crikonnect",
//     startDate: "2025-07-01",
//   };

//   const fixtures = [
//     { team1: "Wolves", team2: "Panthers" },
//     { team1: "Falcons", team2: "Sharks" },
//     { team1: "Cobras", team2: "Hawks" },
//     { team1: "Rhinos", team2: "Tigers" },
//     { team1: "Eagles", team2: "Lions" },
//   ];

//   const outputPath = __dirname;

//   generateFixturePDF(tournament, fixtures, outputPath)
//     .then((filePath) => {
//       console.log("PDF generated at:", filePath);
//     })
//     .catch((err) => {
//       console.error("Error generating PDF:", err);
//     });
// }
